<div class="line-wrapper">
  <h1>
    <div class="first-line js-anime-line">
      <!-- Nagoyaを中心に -->
      <div class="beeline"><span>N</span></div>
      <div class="beeline"><span>a</span></div>
      <div class="beeline"><span>g</span></div>
      <div class="beeline"><span>o</span></div>
      <div class="beeline"><span>y</span></div>
      <div class="beeline"><span>a</span></div>
      <div class="beeline"><span>を</span></div>
      <div class="beeline"><span>中</span></div>
      <div class="beeline"><span>心</span></div>
      <div class="beeline"><span>に</span></div>
    </div>
    <div class="second-line js-anime-line">
      <!-- フロントエンドを -->
      <div class="beeline"><span>フ</span></div>
      <div class="beeline"><span>ロ</span></div>
      <div class="beeline"><span>ン</span></div>
      <div class="beeline"><span>ト</span></div>
      <div class="beeline"><span>エ</span></div>
      <div class="beeline"><span>ン</span></div>
      <div class="beeline"><span>ド</span></div>
      <div class="beeline"><span>を</span></div>
    </div>
    <div class="third-line js-anime-line">
      <!-- 盛り上げよう！ -->
      <div class="beeline"><span>盛</span></div>
      <div class="beeline"><span>り</span></div>
      <div class="beeline"><span>上</span></div>
      <div class="beeline"><span>げ</span></div>
      <div class="beeline"><span>よ</span></div>
      <div class="beeline"><span>う</span></div>
      <div class="beeline"><span>！</span></div>
    </div>
  </h1>

  <p><img src="" alt="" /></p>
</div>

<!-- <script>
  const animeLineList = document.getElementsByClassName("js-anime-line");
  [...animeLineList].forEach((line) => {
    const text = line.textContent;
    line.textContent = "";
    if (text === null) return;
    const textArr = text.trim().split("");
    const textContents = textArr.map((beeline) => {
      const outer = document.createElement("div");
      outer.classList.add("beeline");
      const inner = document.createElement("span");
      inner.textContent = beeline;
      outer.appendChild(inner);
      return outer;
    });
    textContents.map((textContent) => {
      line.appendChild(textContent);
    });
  });
</script> -->

<style>
  .line-wrapper {
    position: relative;
    width: 100%;
    height: 800px;
    max-width: var(--container-lg);
    margin: 0 auto;
  }
  h1 {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
    width: 500px;
  }
  p {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translate(0, -50%);
    width: 80%;
    height: 80%;
    background-color: #ababab;
    z-index: -1;
  }

  .first-line,
  .second-line,
  .third-line {
    height: 5rem;
    opacity: 0;
    font-size: 3rem;
    margin-bottom: 0.3em;
    padding: 0.3em 0.5em;
    line-height: 1;
    letter-spacing: 0.2rem;
    font-weight: bold;
    color: #fff;
    max-width: fit-content;
    background-color: var(--color-primary);
    animation-name: appearance;
    animation-duration: 1s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
  }
  .second-line {
    animation-delay: 0.2s;
  }
  .third-line {
    animation-delay: 0.4s;
  }

  span {
    display: inline-block;
    padding: 0;
    margin: 0;
  }
  .beeline {
    display: inline-block;
    height: 1.5em;
    overflow-x: hidden;
    overflow-y: visible;
  }
  .beeline span {
    opacity: 0;
    animation-name: slide;
    animation-delay: 2s;
    animation-duration: 1s;
    animation-fill-mode: forwards;
  }

  @keyframes appearance {
    from {
      opacity: 0;
      width: 0;
    }
    to {
      opacity: 1;
      width: 100%;
    }
  }
  @keyframes slide {
    from {
      opacity: 0;
      transform: translateX(-100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
</style>
